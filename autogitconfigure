#!/bin/bash
#
#
# author stefano fattore
#
# version BETA 0.1.3

signature(){
cat << "EOF"
           configure process for          
                _                  _  _   
               | |                (_)| |  
   __ _  _   _ | |_   ___    __ _  _ | |_ 
  / _` || | | || __| / _ \  / _` || || __|
 | (_| || |_| || |_ | (_) || (_| || || |_ 
  \__,_| \__,_| \__| \___/  \__, ||_| \__|
                             __/ |        
                            |___/   
            
EOF
}

if [ $1 == "--help" ] || [ $1 == "-h" ]; then
    echo "autogitconfigure [options]"
    echo "  --initall"
    echo "      set username and password, check for dep and install them"
    echo
    echo "  --userdata"
    echo "      set username and password"
    echo
    echo "  --deps"
    echo "      check for dep and install them"
    echo
    echo "[WARN] => Must be run as sudo or with root privileges"
    exit 0
fi

if [ $# -eq 0 ]; then
    echo "[ERR] => No args detected, use --help for tips"
    exit -1
fi

if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "[ERR] => Not running as root, user root account or sudo"
    exit -1
fi

if [ $# -eq 1 ]; then 
    signature
fi

i=$(who | awk '{print $1}' | head -n 1)

if [[ ! -d "/home/$i/.autogit" ]]
then
    echo "Created /home/$i/.autogit folder.."
    mkdir /home/$i/.autogit
fi

if [[ ! -f "/home/$i/.autogit/supersecrets" ]]
then
    echo "Created /home/$i/.autogit/supersecrets file.."
    touch /home/$i/.autogit/supersecrets
fi

user_data(){
    echo "==============================================="
    echo "          set up your git credentials"
    echo "==============================================="
    echo

    echo "> Set username: "
    read uname

    echo "> Set password/token: (no-echo)"
    read -s passwd

    echo "" > /home/$i/.autogit/supersecrets

    echo $uname | openssl aes-256-cbc -a -pbkdf2 -salt -pass pass:some > /home/$i/.autogit/supersecrets
    echo $passwd | openssl aes-256-cbc -a -pbkdf2 -salt -pass pass:some >> /home/$i/.autogit/supersecrets

    echo "==============================================="
    echo "          User data set correctly"
    echo "==============================================="
}


dependencies(){
    echo "==============================================="
    echo "          checking for dependencies"
    echo "==============================================="
    echo

    PACKAGE="expect openssl"
    DEB_PACKAGE_NAME="expect openssl"
    FEDORA_PACKAGE_NAME="expect openssl"

    if cat /etc/*release | grep ^NAME | grep Ubuntu; then
        echo "==============================================="
        echo "Installing packages $DEB_PACKAGE_NAME on Ubuntu"
        echo "==============================================="
        apt-get update
        apt-get install -y $DEB_PACKAGE_NAME
    elif cat /etc/*release | grep ^NAME | grep Debian ; then
        echo "==============================================="
        echo "Installing packages $DEB_PACKAGE_NAME on Debian"
        echo "==============================================="
        apt-get update
        apt-get install -y $DEB_PACKAGE_NAME
    elif cat /etc/*release | grep ^NAME | grep Mint ; then
        echo "============================================="
        echo "Installing packages $DEB_PACKAGE_NAME on Mint"
        echo "============================================="
        apt-get update
        apt-get install -y $DEB_PACKAGE_NAME
    elif cat /etc/*release | grep ^NAME | grep Knoppix ; then
        echo "================================================="
        echo "Installing packages $DEB_PACKAGE_NAME on Kanoppix"
        echo "================================================="
        apt-get update
        apt-get install -y $DEB_PACKAGE_NAME
    elif cat /etc/*release | grep ^NAME | grep Fedora ; then
        echo "==============================================="
        echo "Installing packages $FEDORA_PACKAGE_NAME on Fedora"
        echo "==============================================="
        dnf install $FEDORA_PACKAGE_NAME
    else
        echo "OS NOT DETECTED, couldn't install package $PACKAGE"
        exit 1;
    fi

    echo "==============================================="
    echo "Package $PACKAGE installed successfully"
    echo "==============================================="
}

if [ $1 == "--userdata" ]; then
    user_data
    echo "done"

fi

if [ $1 == "--deps" ]; then
    dependencies

    echo "done"
fi

if [ $1 == "--initall" ]; then
    user_data
    
    dependencies

    echo "done"
fi


