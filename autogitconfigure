#!/bin/bash
#
#
# author stefano fattore
#
# version BETA 0.3.3


FULL="NO"
DEPENDECIES="NO"
USERDATA="NO"
HELP="NO"
COUNT=0

for i in "$@"; do
  COUNT=$((COUNT+1))
  case $i in
    -i|--initall)
      FULL="YES"
      USERDATA="NO"
      DEPENDECIES="NO"
      shift 
      ;;
    -d|--deps)
      if [ $FULL == "YES" ]; then
        echo "[ERR] => cannot combine -i|--initall with $i"
        exit -1
      fi
      DEPENDECIES="YES"
      shift 
      ;;
    -u|--userdata)
      if [ $FULL == "YES" ]; then
        echo "[ERR] => cannot combine -i|--initall with $i"
        exit -1
      fi
      USERDATA="YES"
      shift 
      ;;
    -h|--help)
      HELP="YES"
      shift 
      ;;
    -*|--*)
      echo "Unknown option $i"
      echo "Please run ./autogitconfigure --help"
      exit 1
      ;;
    *)
      ;;
  esac
done


signature(){
cat << "EOF"
           configure process for          
                _                  _  _   
               | |                (_)| |  
   __ _  _   _ | |_   ___    __ _  _ | |_ 
  / _` || | | || __| / _ \  / _` || || __|
 | (_| || |_| || |_ | (_) || (_| || || |_ 
  \__,_| \__,_| \__| \___/  \__, ||_| \__|
                             __/ |        
                            |___/   
            
EOF
}

if [ $HELP == "YES" ]; then
    echo "autogitconfigure [options]"
    echo "  -i|--initall"
    echo "      set username and password, check for dep and install them"
    echo
    echo "  -u|--userdata"
    echo "      set username and password"
    echo
    echo "  -d|--deps"
    echo "      check for dep and install them"
    echo
    echo "  -h|--help"
    echo "      check for dep and install them"
    echo
    exit 0
fi

if [ $COUNT -eq 0 ]; then
    echo "[ERR] => No args detected, use --help for tips"
    exit -1
elif [ $COUNT -gt 0 ]; then 
    signature
fi

i=$(who | awk '{print $1}' | head -n 1)

if [[ ! -d "/home/$i/.autogit" ]]
then
    echo "Created /home/$i/.autogit folder.."
    mkdir /home/$i/.autogit
fi

if [[ ! -f "/home/$i/.autogit/supersecrets" ]]
then
    echo "Created /home/$i/.autogit/supersecrets file.."
    touch /home/$i/.autogit/supersecrets
fi

user_data(){
    echo "==============================================="
    echo "          Set up your git credentials"
    echo "==============================================="
    echo    

    echo "> Set username: "
    read uname

    echo "> Set password/token: (no-echo)"
    read -s passwd

    echo "" > /home/$i/.autogit/supersecrets

    echo $uname | openssl aes-256-cbc -a -pbkdf2 -salt -pass pass:some > /home/$i/.autogit/supersecrets
    echo $passwd | openssl aes-256-cbc -a -pbkdf2 -salt -pass pass:some >> /home/$i/.autogit/supersecrets
}


dependencies(){
    echo "==============================================="
    echo "           Checking dependencies"
    echo "==============================================="
    echo

    PACKAGE=""
    PACKAGE1=""
    PACKAGE2=""

    if ! type "expect" &> /dev/null; then
        PACKAGE1="expect"
    fi
    if ! type "openssl" &> /dev/null; then
        PACKAGE2="openssl"
    fi
    PACKAGE="${PACKAGE1} ${PACKAGE2}"

    if [[ $PACKAGE == " " ]]
    then
        echo "==============================================="
        echo "       All dependencies are satisfied"
        echo "==============================================="
        echo
    else
        echo "==============================================="
        echo "           Installing dependencies"
        echo "==============================================="
        echo
        echo "Installing packages $PACKAGE on $(( lsb_release -ds || cat /etc/*release || uname -om ) 2>/dev/null | head -n1)"
        echo "Press [y/n] to proceed"
        read response

        if [ $response == "y" ] || [ $response == "Y" ]; then 
            if [ -x "$(command -v apt)" ]; then 
                sudo apt update
                sudo apt install -y $PACKAGE
            elif [ -x "$(command -v pacman)" ]; then 
                sudo pacman -S $PACKAGE
            elif [ -x "$(command -v dnf)" ]; then
                sudo dnf install $PACKAGE
            elif [ -x "$(command -v yum)" ]; then
                sudo yum update
                sudo yum install $PACKAGE
            elif [ -x "$(command -v xbps)" ]; then
                sudo xbps-install -Su $PACKAGE
            else 
                echo "OS NOT DETECTED, couldn't install package $PACKAGE"
                exit 1;
            fi

            echo
            echo "==============================================="
            echo "Package $PACKAGE installed successfully"
            echo "==============================================="
        else
            echo "Dependencies installation aborted, quitting"
        fi
    fi
}

if [ $USERDATA == "YES" ]; then
    user_data
    echo "done"

fi

if [ $DEPENDECIES == "YES" ]; then
    dependencies

    echo "done"
fi

if [ $FULL == "YES" ]; then
    user_data
    
    dependencies

    echo "done"
fi


