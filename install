#!/bin/bash
#
#
# author stefano fattore
#
# version BETA 0.4.3

if [ $(whoami) == "root" ]; then
    echo "[ERR] => re-run installer without sudo privileges"
    exit -1
fi

echo "==============================================="
echo "             Autogit installer"
echo "==============================================="
echo

CONFIGURE="NO"
NOSUMAN="NO"
PREFIX="NO"
FOLDER=""


# ARGS parser
for i in "$@"; do
  case $i in
    -c|--configure)
        CONFIGURE="YES"
        shift 
        ;;
    -p=*|--prefix=*)
        PREFIX="YES"
        FOLDER="${i#*=}"
        if [[ ! -d $FOLDER ]]
        then
            echo "[ERR] => given path -> $FOLDER does not exits, quitting.."
            exit -1
        fi
        shift 
        ;;
    -h|--help)
        echo "install [options]"
        echo
        echo "  -c|--configure"
        echo "      initializes the configuration process"
        echo
        echo "  -p|--prefix=<path>"
        echo "      specifies the installation path" 
        echo
        echo "  -h|--help"
        echo "      run helper"
        echo
        exit 0
        shift 
        ;;
    -*|--*)
        echo "Unknown option $i"
        echo "Please run ./install --help"
        exit 1
        ;;
    *)
        ;;
  esac
done
# ARGS parser end

# DIR selector
i=$(whoami)
response="n"

if [[ -f "/home/$i/.autogit/cache" ]]
then
    FIND=$(head -n1 /home/$i/.autogit/cache)
    if [[ $FIND != "" ]]
    then
        echo "A previous installation folder was found in $FIND, do you like override it? [y/n]"
        read response
    fi
fi

if [ $response == "y" ] || [ $response == "Y" ]; then
    FOLDER=$FIND
elif [ $PREFIX == "NO" ]; then
    FOLDER="/usr/local/bin"
else
    if [ $response != "y" ] || [ $response != "Y" ]; then
        if ! rm -rf $FIND; then
            echo "An error occurred, exiting"
            exit -1
        fi
    fi
    FOLDER="${FOLDER}/Autogit"
    if [[ ! -d "${FOLDER}" ]]
    then
        if ! mkdir "${FOLDER}"; then
            echo "An error occurred, exiting"
            exit -1
        fi
    fi
fi

if [ ${FOLDER: -1} != "/" ]; then
    FOLDER="${FOLDER}/"
fi
# DIR selector end

# Installer
if ! $(touch "${FOLDER}test" 2> /dev/null ); then
    # sudo part
    
    echo "Copying the executable into ${FOLDER}.."
    echo "Need sudo privileges to copy the executable.." 
    if ! sudo cp autogit $FOLDER; then
        echo "An error occurred while copying executable, exiting"
        exit -1
    fi
else
    # no sudo part
    echo "Copying the executable into ${FOLDER}"

    # rm previous created file 
    if ! rm -f "${FOLDER}test"; then
        echo "An error occurred, exiting"
        exit -1
    fi

    # DIRS & FILES checking/copying
    if [[ ! -d "${FOLDER}bin" ]]
    then
        if ! mkdir "${FOLDER}/bin"; then
            echo "An error occurred, exiting"
            exit -1
        fi
    fi

    if [[ ! -d "${FOLDER}man" ]]
    then
        if ! mkdir "${FOLDER}/man"; then
            echo "An error occurred, exiting"
            exit -1
        fi
    fi

    if [[ ! -d "${FOLDER}man/man1" ]]
    then
        if ! mkdir "${FOLDER}/man/man1"; then
            echo "An error occurred, exiting"
            exit -1
        fi
    fi

    if [[ ! -d "/home/$i/.autogit" ]]
    then
        if ! mkdir /home/$i/.autogit; then
            echo "An error occurred, exiting"
            exit -1
        else
            echo "Created /home/$i/.autogit conf folder.."
        fi
    fi

    if [[ ! -f "/home/$i/.autogit/cache" ]]
    then
        if ! touch /home/$i/.autogit/cache; then
            echo "An error occurred, exiting"
            exit -1
        else
            echo "Created /home/$i/.autogit/cache file.."
        fi
    fi

    if ! echo "${FOLDER}" > /home/$i/.autogit/cache ; then
        echo "An error occurred, exiting"
        exit -1
    fi

    if ! cp autogit "${FOLDER}bin"; then
        echo "An error occurred while copying executable, exiting"
        exit -1
    fi
    # DIRS & FILES checking/copying end

    # MAN 
    {
        NOSUMAN="YES"
        if ! rm -f ${FOLDER}man/man1/autogit.1.gz; then
            echo "An error occurred, exiting"
            exit -1
        fi
        if ! cp autogit.1 ${FOLDER}man/man1; then
            echo "An error occurred, exiting"
            exit -1
        fi
        if ! gzip ${FOLDER}man/man1/autogit.1; then
            echo "An error occurred, exiting"
            exit -1
        fi
        if ! rm -f ${FOLDER}man/man1/autogit.1; then
            echo "An error occurred, exiting"
            exit -1
        fi
    } &> /dev/null
    # MAN end

    # autogit SOFT LINK to /usr/local/bin
    echo "done"
    echo
    echo "Do you want to generate a soft link to /usr/local/bin? needs sudo permissions [y/n]"
    read response 

    if [ $response == "Y" ] || [ $response == "y" ]; then
        if ! sudo ln -sf "${FOLDER}bin/autogit" /usr/local/bin/autogit; then
            echo "An error occurred while creating symbolic link, exiting"
            exit -1
        else 
            echo "Soft link created"
        fi
    else
        echo "Generating new soft link aborted."
    fi
    # autogit SOFT LINK to /usr/local/bin end
fi

# man generation
echo
echo "Do you want to generate an entry for man? needs sudo permissions [y/n]"
read response 

if [ $response == "Y" ] || [ $response == "y" ]; then
    echo "Generating entry for man.."

    if [[ ! -d "/usr/share/man/man1" ]]
    then
        if ! sudo mkdir /usr/share/man/man1; then
            echo "An error occurred, exiting"
            exit -1
        fi
    fi

    if [ $NOSUMAN == "YES" ]; then
        # man SOFT LINK ( no sudo )
        {
            if ! sudo ln -sf "${FOLDER}man/man1/autogit.1.gz" /usr/share/man/man1/autogit.1.gz; then
                echo "An error occurred while generating entry for man, exiting"
                exit -1
            fi
        } &> /dev/null
    else
        # man cp and gz it( sudo )
        {
            if ! sudo rm -f /usr/share/man/man1/autogit.1; then
                echo "An error occurred while removing autogit cache for man, exiting"
                exit -1
            fi
            if ! sudo rm -f /usr/share/man/man1/autogit.1.gz; then
                echo "An error occurred while removing autogit cache for man, exiting"
                exit -1
            fi
            if ! sudo cp autogit.1 /usr/share/man/man1; then
                echo "An error occurred while generating entry for man, exiting"
                exit -1
            fi
            if ! sudo gzip /usr/share/man/man1/autogit.1; then
                echo "An error occurred while generating entry for man, exiting"
                exit -1
            fi
            if ! sudo rm -f /usr/share/man/man1/autogit.1; then
                echo "An error occurred while removing autogit cache for man, exiting"
                exit -1
            fi
        } &> /dev/null
    fi
    

    echo
    echo "Running trigger for man-db.."

    {
        if ! sudo mandb; then
            echo "An error occurred while running trigger for man-db, exiting"
            exit -1
        fi
    } &> /dev/null

else
    echo "Generating new entry for man aborted."
fi
# man generation end

echo "done"
echo 

if [ $CONFIGURE == "YES" ]; then
    echo
    exec ./autogitconfigure --initall
fi

